<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>URL Shortener</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Arial', sans-serif;
      height: 100vh;
      margin: 0;
      background-color: #f5f5f5;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    header {
      width: 100%;
      background-color: #007bff;
      color: #fff;
      padding: 20px 0;
      text-align: center;
      font-size: 24px;
      font-weight: bold;
      position: relative;
    }

    header a {
      color: #fff;
      text-decoration: none;
      font-weight: bold;
      position: absolute;
      top: 20px;
      right: 20px;
    }

    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 20px;
    }

    form {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
      margin-bottom: 20px;
    }

    label {
      font-size: 18px;
      margin-bottom: 8px;
    }

    input {
      width: 100%;
      padding: 10px;
      font-size: 16px;
      margin-bottom: 20px;
      box-sizing: border-box;
    }

    button {
      background-color: #007bff;
      color: #fff;
      padding: 12px;
      font-size: 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #0056b3;
    }

    .response-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      max-width: 400px;
    }

    .card {
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
      text-align: center;
      width: 100%;
    }

    .short-url {
      margin-top: 10px;
      font-size: 16px;
      color: #007bff;
      cursor: pointer;
      text-decoration: underline;
    }

    .link-options {
      margin-top: 15px;
    }

    .original-link,
    .total-clicks {
      display: inline-block;
      margin: 10px;
      font-size: 14px;
      color: #555;
    }
  </style>
</head>

<body>
  <header>
    Welcome to URL Shortener
    <a href="/auth/logout" class="btn btn-danger" id="logoutButton">Logout</a>
  </header>

  <div class="container">
    <form id="urlForm">
      <label for="originalUrl" class="form-label">Enter URL:</label>
      <input type="text" id="originalUrl" name="originalUrl" class="form-control" required>

      <label for="expiryDate" class="form-label">Expiry Date (Optional):</label>
      <input type="date" id="expiryDate" name="expiryDate" class="form-control">

      <label for="shortcode" class="form-label">Custom Shortcode (Optional, 8 characters only):</label>
      <input type="text" id="shortcode" name="shortcode" class="form-control" minlength="8" maxlength="8">

      <button type="submit" class="btn btn-primary">Shorten URL</button>
    </form>

    <div class="response-container" id="responseContainer" style="display:none;">
      <div class="card" id="cardContainer">
        <p>Shortened URL:</p>
        <div id="shortUrl" class="short-url"></div>

        <div class="link-options">
          <div class="original-link">Original Link: <span id="originalLink"></span></div>
          <div class="total-clicks">Total Clicks: <span id="totalClicks">0</span></div>
        </div>
      </div>
    </div>

    <div class="card mt-4" id="tableCard">
      <h2 class="card-header">Your URLs</h2>
      <div class="card-body">
        <input type="text" id="searchInput" class="form-control mb-3" placeholder="Search URLs">

        <div class="table-responsive">
          <table class="table table-bordered table-striped">
            <thead>
              <tr>
                <th scope="col">SNo.</th>
                <th scope="col">Short URL</th>
                <th scope="col">Long URL</th>
                <th scope="col">Clicks</th>
                <th scope="col">Creation Date</th>
                <th scope="col">Expiry Date</th>
              </tr>
            </thead>
            <tbody id="urlTableBody">
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <div class="modal" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editModalLabel">Edit URL</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <label for="editShortcode">Shortcode (8 characters)(Optional):</label>
            <input type="text" id="editShortcode" name="editShortcode" class="form-control" minlength="8" maxlength="8">

            <label for="editExpiryDate">Expiry Date (Optional):</label>
            <input type="date" id="editExpiryDate" name="editExpiryDate" class="form-control">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="editSubmitButton">Save changes</button>
          </div>
        </div>
      </div>
    </div>

  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      document.getElementById('searchInput').addEventListener('input', function (event) {
        const searchTerm = event.target.value.trim().toLowerCase();
        filterTable(searchTerm);
      });

      async function filterTable(searchTerm) {
        const urlTableBody = document.getElementById('urlTableBody');
        const rows = urlTableBody.getElementsByTagName('tr');

        for (const row of rows) {
          const cells = row.getElementsByTagName('td');
          let rowMatchesSearch = false;

          for (const cell of cells) {
            const cellText = cell.textContent || cell.innerText;
            if (cellText.toLowerCase().includes(searchTerm)) {
              rowMatchesSearch = true;
              break;
            }
          }

          row.style.display = rowMatchesSearch ? '' : 'none';
        }
      }
      const fetchDataAndUpdateTable = async () => {
        try {
          const response = await fetch('http://localhost:8080/user/getData');
          const data = await response.json();

          if (data && data.data && data.data.length > 0) {
            document.getElementById('tableCard').style.display = 'block';

            const urlTableBody = document.getElementById('urlTableBody');
            urlTableBody.innerHTML = '';

            data.data.forEach((item, index) => {
              const row = document.createElement('tr');
              row.innerHTML = `
                <td>${index + 1}</td>
                <td><a href="${item.shortUrl}" target="_blank">${item.shortUrl}</a></td>
                <td><a href="${item.origUrl}" target="_blank">${item.origUrl}</a></td>
                <td>${item.clicks}</td>
                <td>${new Date(item.date).toLocaleString()}</td>
                <td>${item.expiresAt ? new Date(item.expiresAt).toLocaleString() : 'N/A'}</td>
                <td> 
                  <button class="btn btn-primary btn-sm editButton" 
                  data-short-url="${item.shortUrl}" 
                  data-expiry-date="${item.expiresAt || ''}">Edit</button>
                  <button class="btn btn-danger btn-sm deleteButton" data-short-url="${item.shortUrl}">Delete</button>
                </td>
              `;
              urlTableBody.appendChild(row);
            });
          } else {
            document.getElementById('tableCard').style.display = 'none';
          }
        } catch (error) {
          console.error(error);
          alert('An error occurred while fetching data. Please try again.');
        }
      };

      fetchDataAndUpdateTable();


      document.getElementById('urlTableBody').addEventListener('click', function (event) {
        if (event.target.classList.contains('deleteButton')) {
          confirmDelete(event);
        } else if (event.target.classList.contains('editButton')) {
          editRow(event);
        }
      });

      function editRow(event) {
        const shortUrl = event.target.dataset.shortUrl; 
        const expiryDate = event.target.dataset.expiryDate  
        const editModal = new bootstrap.Modal(document.getElementById('editModal')); 

        document.getElementById('editShortcode').value = shortUrl.split('/').pop();
        document.getElementById('editExpiryDate').value = new Date(expiryDate).toISOString().split('T')[0]
        document.getElementById('editShortcode').dataset.originalshortCode = shortUrl.split('/').pop() 
        editModal.show();
      }

      document.getElementById('editSubmitButton').addEventListener('click', async function (event) {
        event.preventDefault();
        const originalshortCode = document.getElementById('editShortcode').dataset.originalshortCode
        const shortCode = document.getElementById('editShortcode').value.trim();
        const expiryDate = document.getElementById('editExpiryDate').value; 

        if (shortCode && shortCode.length < 8) return alert('invalid shortcode');
        if (expiryDate && new Date(expiryDate) <= new Date()) {
          alert('Expiry date must be after the current date.');
          return;
        }

        const editURL = `http://localhost:8080/user/edit`;
        console.log(expiryDate)
        
        try {
          const response = await fetch(editURL, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ originalshortCode,shortCode,expiryDate }),
          });
          if (response.ok) { 
            fetchDataAndUpdateTable();  
          } else {
            alert('An error occurred while editing the URL. Please try again.');
          }
        } catch (error) {
          console.error(error);
          alert('An error occurred while editing the URL. Please try again.');
        }
      });
      function confirmDelete(event) {
        const shortUrl = event.target.dataset.shortUrl;
        if (!shortUrl) return alert('Unexpected')
        const isConfirmed = confirm(`Are you sure you want to delete the URL: ${shortUrl}?`);

        if (isConfirmed) {
          deleteRow(shortUrl);
        }
      }

      async function deleteRow(shortUrl) {
        try {
          const deleteURL = `http://localhost:8080/user/delete`;

          const response = await fetch(deleteURL, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ shortUrl: shortUrl }),
          });

          if (response.ok) {
            fetchDataAndUpdateTable();
          } else {
            alert('An error occurred while deleting the URL. Please try again.');
          }
        } catch (error) {
          console.error(error);
          alert('An error occurred while deleting the URL. Please try again.');
        }
      }

      document.getElementById('urlForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        const originalURL = document.getElementById('originalUrl').value.trim();
        const expiryDate = document.getElementById('expiryDate').value;
        const shortcode = document.getElementById('shortcode').value.trim();

        const fetchURL = 'http://localhost:8080/user/shorten';
        if (expiryDate && new Date(expiryDate) <= new Date()) {
          alert('Expiry date must be after the current date.');
          return;
        }
        try {
          const response = await fetch(fetchURL, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ originalURL, expiryDate, shortcode }),
          });

          if (response.ok) {
            const data = await response.json();
            if (!data) return alert('Please enter a proper Url')
            displayResponse(data.shortUrl, data.origUrl, data.clicks);
          } else if (response.status === 501) {
            const data = await response.json();
            alert(data.msg);
          } else alert('An error occurred. Please try again.');
        } catch (error) {
          console.error(error);
          alert('An error occurred. Please try again.');
        }
      });

      function displayResponse(shortUrl, origUrl, clicks) {
        const responseContainer = document.getElementById('responseContainer');
        const cardContainer = document.getElementById('cardContainer');
        const shortUrlContainer = document.getElementById('shortUrl');

        shortUrlContainer.innerHTML = `<a href="${shortUrl}" target="_blank" rel="noopener noreferrer" class="short-url">${shortUrl}</a>`;

        const originalLinkContainer = document.getElementById('originalLink');
        const totalClicksContainer = document.getElementById('totalClicks');
        originalLinkContainer.innerHTML = `<a href="${origUrl}" target="_blank" rel="noopener noreferrer" class="short-url">${origUrl}</a>`;
        totalClicksContainer.textContent = clicks;

        responseContainer.style.display = 'flex';
        fetchDataAndUpdateTable();
      }

      document.getElementById('logoutButton').addEventListener('click', async function (event) {
        event.preventDefault();

        try {
          const response = await fetch('/auth/logout', {
            method: 'POST',
          });

          if (response.ok) {
            window.location.href = '/';
          } else {
            alert('Logout failed. Please try again.');
          }
        } catch (error) {
          console.error(error);
          alert('An error occurred during logout. Please try again.');
        }
      });
    });
  </script>
</body>

</html>